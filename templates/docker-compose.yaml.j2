version: '2'
services:
  openldap:
    image: lefilament/openldap
    container_name: openldap
    restart: always
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "{{ ldap_org }}"
      LDAP_DOMAIN: "{{ ldap_domain }}"
      LDAP_BASE_DN: "{{ ldap_base_dn }}"
      LDAP_ADMIN_PASSWORD: "{{ ldap_admin_pass }}"
      LDAP_CONFIG_PASSWORD: "{{ ldap_config_pass }}"
      LDAP_READONLY_USER: "true"
      LDAP_READONLY_USER_USERNAME: "readonly"
      LDAP_READONLY_USER_PASSWORD: "{{ ldap_readonly_pass }}"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - ldap_db:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
    domainname: "openldap" # important: same as hostname
    hostname: "openldap"
    networks:
      default:

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    restart: unless-stopped
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    depends_on:
      - openldap
    networks:
      default:
      inverseproxy_shared:
    labels:
      traefik.enable: "true"
      traefik.http.routers.ldap.rule: "Host(`{{ ldap_url }}`)"
      traefik.http.routers.ldap.service: "ldap"
      traefik.http.services.ldap.loadbalancer.server.port: "80"

  sso:
    image: coudot/lemonldap-ng:latest
    container_name: sso
    extra_hosts:
    - "handler.{{ sso_url }}:127.0.0.1"
    restart: always
    volumes:
    - lemonldap_etc_conf:/etc/lemonldap-ng
    - lemonldap_conf:/var/lib/lemonldap-ng/conf
    - lemonldap_sessions:/var/lib/lemonldap-ng/sessions
    - lemonldap_psessions:/var/lib/lemonldap-ng/psessions
    environment:
      SSODOMAIN: {{ sso_url }}
      PORTAL_HOSTNAME: {{ sso_url }}
      MANAGER_HOSTNAME: manager.{{ sso_url}}
      HANDLER_HOSTNAME: handler.{{ sso_url }}
    labels:
      traefik.enable: "true"
      traefik.http.routers.sso.rule: "Host(`manager.{{ sso_url }}`, `{{ sso_url }}`, `handler.{{ sso_url }}`)"
      traefik.http.routers.sso.service: "sso"
      traefik.http.services.sso.loadbalancer.server.port: "80"
    networks:
      default:
      inverseproxy_shared:

networks:
    default:
        internal: true
        driver_opts:
            encrypted: 1
    inverseproxy_shared:
        external: true

volumes:
    ldap_db:
    ldap_config:
    lemonldap_conf:
    lemonldap_etc_conf:
    lemonldap_sessions:
    lemonldap_psessions:
